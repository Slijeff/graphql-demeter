type Beer implements Product{
	name: String!
	SKU: String!
	price: Int!
	kind: BeerKind
}

type ClientQuery{
	menu: [Product!]!
}

type Query{
	clientQuery: ClientQuery!
	pubQuery: PubQuery!
	restProxy: Anything
	getFile(
		fileKey: String!
	): String
}

scalar Anything

input ProxyInput{
	val: String!
}

type Order{
	number: Int!
	createdAt: String!
	orderedBeers: [OrderedBeer!]!
}

type OrderedBeer{
	quantity: Int!
	beer: Beer!
}

type PubQuery{
	orders: [Order!]!
}

type PubMutation{
	submitOrder(
		order: SubmitOrder!
	): Boolean
	addBeer(
		beer: AddBeer!
	): Boolean
	editBeer(
		editBeer: EditBeer!
		sku: SKUInput!
	): Boolean
	removeBeer(
		sku: SKUInput!
	): Boolean
	cancelOrder(
		orderDetail: OrderDetail!
	): Boolean
	uploadFile(
		fileInput: FileInput!
	): FileUploadResponse!
	addSnack(
		snack: AddSnack!
	): Boolean
	editSnack(
		sku: SKUInput!
		snack: EditSnack!
	): Boolean
	deleteSnack: Boolean
}

input FileInput{
	filename: String!
	contentType: String!
}

type FileUploadResponse{
	putUrl: String!
	fileKey: String!
}

input AddBeer{
	name: String!
	SKU: String!
	price: Int!
	kind: BeerKind
}

input EditBeer{
	name: String
	price: Int
	kind: BeerKind
}

input SKUInput{
	SKU: String!
}

input SubmitOrder{
	productInOrder: [ProductInOrder!]! = []
}

input ProductInOrder{
	SKU: String!
	quantity: Int!
}

input OrderDetail{
	number: Int!
}

type Mutation{
	pubMutation: PubMutation
	"""
	user
	"""
	register(
		user: RegisterInput!
	): RegisterResponse!
}

type RegisterResponse{
	registered: Boolean
	hasError: RegisterErrors
}

input RegisterInput{
	username: String!
	password: String!
	invitationToken: String
}

enum RegisterErrors{
	USERNAME_EXISTS
	PASSWORD_WEAK
	INVITE_DOMAIN_INCORRECT
	LINK_EXPIRED
	USERNAME_INVALID
}

schema{
	query: Query
	mutation: Mutation
}

enum BeerKind{
	IPA
	APA
	Lager
	Sour
	Ale
}

interface Product{
	SKU: String!
	name: String!
	price: Int!
}

type Snack implements Product{
	SKU: String!
	name: String!
	price: Int!
}

input AddSnack{
	SKU: String!
	name: String!
	price: Int!
}

input EditSnack{
	SKU: String
	name: String
	price: Int
}
